<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zifangsky.mapper.AuthAccessTokenMapper">
  <resultMap id="BaseResultMap" type="cn.zifangsky.model.AuthAccessToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="client_id" jdbcType="INTEGER" property="clientId" />
    <result column="expires_in" jdbcType="BIGINT" property="expiresIn" />
    <result column="grant_type" jdbcType="VARCHAR" property="grantType" />
    <result column="scope" jdbcType="VARCHAR" property="scope" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, access_token, user_id, user_name, client_id, expires_in, grant_type, scope, create_user, 
    create_time, update_user, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_access_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_access_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.zifangsky.model.AuthAccessToken">
    insert into auth_access_token (id, access_token, user_id, 
      user_name, client_id, expires_in, 
      grant_type, scope, create_user, 
      create_time, update_user, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{accessToken,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{clientId,jdbcType=INTEGER}, #{expiresIn,jdbcType=BIGINT}, 
      #{grantType,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, #{createUser,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zifangsky.model.AuthAccessToken">
    insert into auth_access_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="expiresIn != null">
        expires_in,
      </if>
      <if test="grantType != null">
        grant_type,
      </if>
      <if test="scope != null">
        scope,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="expiresIn != null">
        #{expiresIn,jdbcType=BIGINT},
      </if>
      <if test="grantType != null">
        #{grantType,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zifangsky.model.AuthAccessToken">
    update auth_access_token
    <set>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="expiresIn != null">
        expires_in = #{expiresIn,jdbcType=BIGINT},
      </if>
      <if test="grantType != null">
        grant_type = #{grantType,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        scope = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zifangsky.model.AuthAccessToken">
    update auth_access_token
    set access_token = #{accessToken,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      client_id = #{clientId,jdbcType=INTEGER},
      expires_in = #{expiresIn,jdbcType=BIGINT},
      grant_type = #{grantType,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByUserIdClientIdScope" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from auth_access_token
        where user_id = #{userId,jdbcType=INTEGER} AND client_id = #{clientId,jdbcType=INTEGER} AND scope = #{scope,jdbcType=VARCHAR}
    </select>
    <select id="selectByAccessToken" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from auth_access_token
        where access_token = #{accessToken,jdbcType=VARCHAR}
    </select>
</mapper>